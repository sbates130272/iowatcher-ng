version: '3.8'

networks:
  bridge:
    driver: bridge

volumes:
  prometheus-data: {}
  grafana-data: {}

services:
  prometheus:
    image: prom/prometheus:v2.40.5
    container_name: prom_prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    expose:
      - 9090
    networks:
      - bridge

  node-exporter:
    image: prom/node-exporter:v1.5.0
    container_name: prom_node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - bridge

  iowacherng-exporter:
    build: .
    image: iowatcherng/exporter:v0.1.0
    container_name: iowatcherng_exporter
    expose:
      - 9975
      - 9001
    command: bash -c 'nc -l -p 9001 | iowatcherng-exporter ingest --input -'
    ports:
      - 9975:9975
      - 9001:9001
    networks:
      - bridge

  grafana:
    image: grafana/grafana:7.5.7
    container_name: grafana_grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    networks:
      - bridge
